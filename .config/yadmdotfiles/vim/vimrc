" Install plugin manager

if empty(glob('~/.vim/autoload/plug.vim'))
  echo "Downloading junegunn/vim-plug to manage plugins..."
  silent !curl -fLo ~/.vim/autoload/plug.vim --create-dirs
    \ https://raw.githubusercontent.com/junegunn/vim-plug/master/plug.vim
  autocmd VimEnter * PlugInstall --sync | source $MYVIMRC
endif

" Install plugins

call plug#begin('~/.vim/plugged')
Plug 'tpope/vim-surround'
Plug 'tpope/vim-commentary'
Plug 'tpope/vim-repeat'
Plug 'christoomey/vim-system-copy'
Plug 'christoomey/vim-sort-motion'
Plug 'kana/vim-textobj-user'
Plug 'kana/vim-textobj-indent'
Plug 'kana/vim-textobj-entire'
Plug 'kana/vim-textobj-line'
call plug#end()


""""""""""""""""""""""""""""
"Settings
""""""""""""""""""""""""""""
set nocompatible
"set encoding=utf-8 nobomb
"set ai          "Autoindet
set mouse=a     "Use mouse
set clipboard=unnamedplus  "use system clipboard
set number  "Display linenumbers
set relativenumber   "Linenumbers relative to cursor
syntax on   "Turn Syntax highlighting on
set smarttab    "Smart Tabulator
set smartcase   "Smat casematching
set dir=/tmp/   "Dir for swapfiles
set autochdir   "Follow files into dir
set softtabstop=4
set shiftwidth=4
filetype plugin on
filetype indent on
set wildignore=*.swp,*.bak,*.pyc,*.class
set visualbell  "terminal bell flashes screen
set noerrorbells "terminal bell makes no sound
set nostartofline   "keeps cursor in the same colum after movements
set ls=2    "Always show status with filename
"setlocal spell! spellang=en  "Spellcheck?
set nobackup
set noswapfile
set ofu=syntaxcomplete#Complete
au CursorMovedI,InsertLeave * if pumvisible() == 0|silent! pclose|endif
set completeopt=menuone,menu,longest,preview
set wildmode=list:longest,full   "Command mode completions behaves as in shell
set hidden      "Better buffer management
set expandtab   "Make spaces out of tabs
set shiftround  "Shift to next tab marker
set shiftwidth=4        "Width of a tab marker
set incsearch   "Higlight while typing
set hlsearch    "Higlight all matches of a search
set smartcase
set cursorline  "Display line under cursor
set history=10000    "Longer history
set undolevels=1000
set wrap   "wrap long lines
set linebreak   "break at sensible chars
set showbreak=-->
set ruler   "display line and cloumn ruler
set esckeys " Allow cursor keys in insert mode
set backspace=indent,eol,start " Allow backspace in insert mode
set ttyfast " Optimize for fast terminal connections
set gdefault " Add the g flag to search/replace by default
set exrc "  Enable per-directory .vimrc files
set secure " and disable unsafe commands in them
colorscheme delek
set tags+=~/.vim/tags/cpp
set tags+=~/.vim/systags
"hi LineNr ctermbg=Blue
" build tags of your own project with Ctrl-F12
map <C-F12> :!ctags -R --c++-kinds=+p --fields=+iaS --extra=+q .<CR>

" OmniCppComplete
	let OmniCpp_NamespaceSearch = 1
	let OmniCpp_GlobalScopeSearch = 1
	let OmniCpp_ShowAccess = 1
	let OmniCpp_ShowPrototypeInAbbr = 1 " show function parameters
	let OmniCpp_MayCompleteDot = 1 " autocomplete after .
	let OmniCpp_MayCompleteArrow = 1 " autocomplete after ->
	let OmniCpp_MayCompleteScope = 1 " autocomplete after ::
	let OmniCpp_DefaultNamespaces = ["std", "_GLIBCXX_STD"]


autocmd FileType python set omnifunc=pythoncomplete#Complete
autocmd FileType javascript set omnifunc=javascriptcomplete#CompleteJS
autocmd FileType html set omnifunc=htmlcomplete#CompleteTags
autocmd FileType css set omnifunc=csscomplete#CompleteCSS
autocmd FileType xml set omnifunc=xmlcomplete#CompleteTags
autocmd FileType php set omnifunc=phpcomplete#CompletePHP
autocmd FileType c set omnifunc=ccomplete#Complete
autocmd Filetype html setlocal sw=2 expandtab

let g:SuperTabDefaultCompletionType = "context"
let g:SuperTabContextDefaultCompletionType = "<c-n>"
set pastetoggle=<F2>

""""""""""""""""""""""""""""
"Custom commands and maps
""""""""""""""""""""""""""""
let mapleader =","
" Navigating with guides
	inoremap <leader><leader> <Esc>/<++><Enter>"_c4l
	vnoremap <leader><leader> <Esc>/<++><Enter>"_c4l
	map <leader><leader> <Esc>/<++><Enter>"_c4l
" Shortcutting split navigation, saving a keypress:
	map <C-h> <C-w>h
	map <C-j> <C-w>j
	map <C-k> <C-w>k
	map <C-l> <C-w>l
" Tabbing
	set splitbelow splitright
	nnoremap <leader>e :Ex<CR>
	nnoremap <leader>t :tabnew<CR>:Ex<CR>
	nnoremap <leader>v :vsplit<CR>:w<CR>:Ex<CR>
	nnoremap <leader>s :split<CR>:w<CR>:Ex<CR>
inoremap <leader>ww <Esc>:w<Enter>
inoremap <leader>wq <Esc>:wq<Enter>

"Compiles current file as C/C++-Source and execute the result
command -nargs=* Cit :w|!gcc -Wall -Werror -O0 -o %:r '%:p' && ./%:r <args><C-m>
"Removes als C-style comments from current fiel
command Crem :%s/\s*\/\*\(.\|\n\)\{-}\*\/\n//|:%s/\s*\/\/.*$//|:noh
"Write to current file with sudo privileges
command Wsudo :%!sudo tee > /dev/null %
"Executes current file as script
map <C-k> <Esc>:w<CR>:!chmod u+x '%:p' && ./%:r.%:e<C-m>
imap <C-k> <Esc>:w<CR>:!chmod u+x '%:p' && ./%:r.%:e<C-m>
nnoremap <F9> :!%:p<Enter>
"Copy to and paste from Clipboard
map <C-a> "+y
map! <C-f> <Esc>"+pi
"Turn recording key off"
nnoremap Q q
nnoremap q <Nop>
"nnoremap ; :


"HTML
	autocmd FileType html inoremap ,h <html><head><Enter><title><++></title> <Esc><<i<Enter></head><body> <Esc><<i<Enter><p><++></p><Enter><++><Enter></body></html><Enter><Esc>gg0
	autocmd FileType html inoremap ,b <b></b><Space><++><Esc>FbT>i
	autocmd FileType html inoremap ,it <em></em><Space><++><Esc>FeT>i
	autocmd FileType html inoremap ,1 <h1></h1><Enter><Enter><++><Esc>2kf<i
	autocmd FileType html inoremap ,2 <h2></h2><Enter><Enter><++><Esc>2kf<i
	autocmd FileType html inoremap ,3 <h3></h3><Enter><Enter><++><Esc>2kf<i
	autocmd FileType html inoremap ,p <p></p><Enter><Enter><++><Esc>02kf>a
	autocmd FileType html inoremap ,a <a<Space>href=""><++></a><Space><++><Esc>14hi
	autocmd FileType html inoremap ,e <a<Space>target="_blank"<Space>href=""><++></a><Space><++><Esc>14hi
	autocmd FileType html inoremap ,ul <ul><Enter><li></li><Enter></ul><Enter><Enter><++><Esc>03kf<i
	autocmd FileType html inoremap ,li <Esc>o<li></li><Esc>F>a
	autocmd FileType html inoremap ,ol <ol><Enter><li></li><Enter></ol><Enter><Enter><++><Esc>03kf<i
	autocmd FileType html inoremap ,im <img src="" alt="<++>"><++><esc>Fcf"a
	autocmd FileType html inoremap ,td <td></td><++><Esc>Fdcit
	autocmd FileType html inoremap ,tr <tr></tr><Enter><++><Esc>kf<i
	autocmd FileType html inoremap ,th <th></th><++><Esc>Fhcit
	autocmd FileType html inoremap ,tab <table><Enter></table><Esc>O
	autocmd FileType html inoremap ,gr <font color="green"></font><Esc>F>a
	autocmd FileType html inoremap ,rd <font color="red"></font><Esc>F>a
	autocmd FileType html inoremap ,yl <font color="yellow"></font><Esc>F>a
	autocmd FileType html inoremap &<space> &amp;<space>

"MARKDOWN
	autocmd Filetype markdown,rmd map <leader>w yiWi[<esc>Ea](<esc>pa)
	autocmd Filetype markdown,rmd inoremap ,n ---<Enter><Enter>
	autocmd Filetype markdown,rmd inoremap ,b ****<++><Esc>F*hi
	autocmd Filetype markdown,rmd inoremap ,s ~~~~<++><Esc>F~hi
	autocmd Filetype markdown,rmd inoremap ,e **<++><Esc>F*i
	autocmd Filetype markdown,rmd inoremap ,h ====<Space><++><Esc>F=hi
	autocmd Filetype markdown,rmd inoremap ,i ![](<++>)<++><Esc>F[a
	autocmd Filetype markdown,rmd inoremap ,a [](<++>)<++><Esc>F[a
	autocmd Filetype markdown,rmd inoremap ,1 #<Space><Enter><++><Esc>kA
	autocmd Filetype markdown,rmd inoremap ,2 ##<Space><Enter><++><Esc>kA
	autocmd Filetype markdown,rmd inoremap ,3 ###<Space><Enter><++><Esc>kA
	autocmd Filetype markdown,rmd inoremap ,l --------<Enter>
	autocmd Filetype markdown,rmd inoremap ,r ```{r}<CR>```<CR><CR><esc>2kO
	autocmd Filetype markdown,rmd inoremap ,p ```{python}<CR>```<CR><CR><esc>2kO
	autocmd Filetype markdown,rmd inoremap ,c ```<cr>```<cr><cr><esc>2kO

"Python
        autocmd Filetype python inoremap ,d <CR>def <++>(*ar, **kw):<CR><++><CR><CR><esc>4k0

"au! BufWritePost .vimrc source %    "Relod .vimrc automatically on change
noh
