""""""""""""""""""""""""""""
"Settings
""""""""""""""""""""""""""""
set nocompatible
"set encoding=utf-8 nobomb
"set ai          "Autoindet
set mouse=a     "Use mouse
set clipboard=unnamedplus
set number  "Display linenumbers
syntax on   "Turn Syntax highlighting on
set smarttab    "Smart Tabulator
set smartcase   "Smat casematching
set autochdir
set softtabstop=4
set shiftwidth=4
filetype plugin on
filetype indent on
set wildignore=*.swp,*.bak,*.pyc,*.class
set visualbell
set noerrorbells
set nostartofline
set ls=2    "Always show status with filename
"set spell!  "Spellcheck?
set nobackup
set noswapfile
set ofu=syntaxcomplete#Complete
au CursorMovedI,InsertLeave * if pumvisible() == 0|silent! pclose|endif
set completeopt=menuone,menu,longest,preview
set hidden      "Better buffer management
set expandtab   "Make spaces out of tabs
set shiftround  "Shift to next tab marker
set shiftwidth=4        "Width of a tab marker
set incsearch   "Higlight while typing
set hlsearch    "Higlight all matches of a search
set smartcase
set cursorline  "Display line under cursor
set history=10000    "Longer histry
set undolevels=1000
set wildmenu
set wrap
set lbr
set ruler
set wildmenu " Enhance command-line completion
set esckeys " Allow cursor keys in insert mode
set backspace=indent,eol,start " Allow backspace in insert mode
set ttyfast " Optimize for fast terminal connections
set gdefault " Add the g flag to search/replace by default
set exrc "  Enable per-directory .vimrc files
set secure " and disable unsafe commands in them
" if exists("&relativenumber")
"    set relativenumber
"    au BufReadPost * set relativenumber
" endi
set showbreak=-->
set wildmode=list:longest,full   "Commandmode completions behaves as in shell
set splitbelow splitright
colorscheme delek       
set tags+=~/.vim/tags/cpp
set tags+=~/.vim/systags
"hi LineNr ctermbg=Blue
" build tags of your own project with Ctrl-F12
map <C-F12> :!ctags -R --c++-kinds=+p --fields=+iaS --extra=+q .<CR>
" OmniCppComplete
let OmniCpp_NamespaceSearch = 1
let OmniCpp_GlobalScopeSearch = 1
let OmniCpp_ShowAccess = 1
let OmniCpp_ShowPrototypeInAbbr = 1 " show function parameters
let OmniCpp_MayCompleteDot = 1 " autocomplete after .
let OmniCpp_MayCompleteArrow = 1 " autocomplete after ->
let OmniCpp_MayCompleteScope = 1 " autocomplete after ::
let OmniCpp_DefaultNamespaces = ["std", "_GLIBCXX_STD"]

if has('autocmd')
    autocmd FileType python set omnifunc=pythoncomplete#Complete
    autocmd FileType javascript set omnifunc=javascriptcomplete#CompleteJS
    autocmd FileType html set omnifunc=htmlcomplete#CompleteTags
    autocmd FileType css set omnifunc=csscomplete#CompleteCSS
    autocmd FileType xml set omnifunc=xmlcomplete#CompleteTags
    autocmd FileType php set omnifunc=phpcomplete#CompletePHP
    autocmd FileType c set omnifunc=ccomplete#Complete
endif
let g:SuperTabDefaultCompletionType = "context"
let g:SuperTabContextDefaultCompletionType = "<c-n>"
set nocp
set pastetoggle=<F2>

""""""""""""""""""""""""""""
"Custom commands and maps
""""""""""""""""""""""""""""
"Compiles current file as C/C++-Source and execute the result
command -nargs=* Cit :w|!gcc -Wall -Werror -O0 -o %:r '%:p' && ./%:r <args><C-m>
"Removes als C-style comments from current fiel
command Crem :%s/\s*\/\*\(.\|\n\)\{-}\*\/\n//|:%s/\s*\/\/.*$//|:noh
"Write to current file with sudo privileges
command Wsudo :%!sudo tee > /dev/null %
"Executes current file as script
map <C-k> <Esc>:w<CR>:!chmod u+x '%:p' && ./%:r.%:e<C-m>
nnoremap <F9> :!%:p<Enter>
"Copy to and paste from Clipboard
map <C-a> "+y
map! <C-f> <Esc>"+pi
"Turon recording key off"
map q <Nop>
"nnoremap ; :

""""""""""""""""""""""""""""
"Startup commands
""""""""""""""""""""""""""""
au! BufWritePost .vimrc source %    "Relod .vimrc automatically on change
"map q <Nop>
nnoremap Q q
nnoremap q <Nop>
noh
