#! /bin/bash

# Bash-specific aliases. Reminder: For more complex things (that target
# multiple shells) you should use scripts in bin.

##########################
# General
##########################
# Disk usage
alias df='df -h'
alias dfroot="df | grep -E '\s/$'"
alias du='du -h'

# Navigation
#alias ls="$(alias ls | sed -E "s/^alias ls='(.*)'\$/\1 -h/")"
_lsbase() { args=( "$@" ); ls -hlA1 "${args[@]:1}" && echo "###$1"; }
alias lt='_lsbase Oldest -t'
alias ltr='_lsbase Newest -rt'
alias lfs='_lsbase Smallest -S'
alias lfr='_lsbase Largest -rS'
alias rl='readlink -f'

# Typos
alias vi='vim'
alias bi='vim'
alias vo='vim'
alias cd..='cd ..'

# History
alias h='history | grep -i'
alias hist='history | grep -i'

# Processes
alias p='ps aux --sort=-pcpu | grep -v "grep.\+-i -e USER.\+%CPU.*" | grep -i -e "USER.\+%CPU.*" -e'
alias pscpu='ps aux --sort=-pcpu | head -n 6'

# Shell
alias reload="exec $SHELL -l" # Reload the shell (i.e. invoke as a login shell)
alias fu='sudo $(history -p !!)'
alias cb='cp --backup=t' # Make numered backups if file exists
alias ppath='echo -e ${PATH//:/\\n}'  # Print each PATH entry on a separate line


##########################
# Network
##########################
alias smartwget='wget --recursive --continue --no-host-directories --no-verbose --no-parent --reject='index.html*' --ask-password --cut-dirs=3'
alias syncr='rsync --human-readable --info=progress2 --partial --append-verify' # --prune-empty-dirs --min-size=1' --archive



##########################
# Administration
##########################
alias luksList='sudo dmsetup ls --target crypt'
alias luksOpen='sudo cryptsetup luksOpen'
alias luksClose='sudo cryptsetup luksClose'


##########################
# Programming
##########################
alias ax='chmod a+x'
alias dwn='disown -h %1'
alias indent='indent -pmt -kr -bad -br -blf -brs -cdw -ss -nlp -nlps -l80'
alias splint='splint +unixlib'
alias valgrind='valgrind --track-origins=yes'

# docker
untagged_containers() {
    # Print containers using untagged images: $1 is used with awk's print: 0=line, 1=column 1.
    # NOTE: "[0-9a-f]{12}" does not work with GNU Awk 3.1.7 (RHEL6).
    #       Ref: https://github.com/blueyed/dotfiles/commit/a14f0b4b#commitcomment-6736470
    docker ps -a | tail -n +2 | awk '$2 ~ "^[0-9a-f]+$" {print $'$1'}'
}
untagged_images() {
    # Print untagged images: $1 is used with awk's print: 0=line, 3=column 3.
    # NOTE: intermediate images (via -a) seem to only cause
    # "Error: Conflict, foobarid wasn't deleted" messages.
    # Might be useful sometimes when Docker messed things up?!
    # docker images -a | awk '$1 == "<none>" {print $'$1'}'
    docker images | tail -n +2 | awk '$1 == "<none>" {print $'$1'}'
}
dkshellintofailedbuild() {
    local container_id=${1:?Give a container ID}
    local newimage=${2:?Giva a name for the new image}
    docker commit "$container_id" "$newimage" &&
    docker run -it "$newimage" sh
}
