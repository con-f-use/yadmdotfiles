#!/usr/bin/env bash
# encoding: UTF-8, break: linux, indent: 4 spaces, lang: bash 3+/eng
description="./$0 -h | [2|3]
Initialize folder for direnv.

"

libfile="$HOME/.config/yadmdotfiles/bash/jcgb.bash"
[ -r "$libfile" ] && source "$libfile" || { 2>echo "Requires '$libfile'!"; exit 1; }

main() {
    envdir=$(mktemp -t --directory --suffix "$(printf "%(%y%m%d-%H%M%S)T" $EPOCHSECONDS)" py${vers}_XXX)
    echo "$envdir"
    cd "$envdir/" || true
    > .envrc echo -e \
        "layout python${vers}\n" \
        "#has <prog>            # checks if command available\n" \
        "#expand_path <rel_path> [<root>]\n" \
        "#dotenv <path>         #load .env file\n" \
        "#source_env <path>     #load .env without security check\n" \
        "#source_up <filename>  #load .env searched from parent dir up to /\n" \
        "#PATH_add <path>       #prepends expanded path\n" \
        "#watch_file <path>,..  #reload env if <path> changes\n" \
        "#export VAR_NAME=VALUE #exports a varialbe to the environment\n" \
        "#dotenv <path>         #load a .env file e.g. used in node & ruby\n" \
        "#use <tool>            # e.g. nix for version pinning"
    direnv allow ./
    eval "$(direnv export bash)"
    # python -m pip install -U wheel setuptools pip setuptools-scm pipenv requests 2>&1 >pip.log &
    python -m pip install -U wheel setuptools pip 2>&1 >pip.log &
}

if [ "$0" = "$BASH_SOURCE" ]; then
    usage "$@"
    set -o errexit -o pipefail
    vers=${1:-3}
    main "$@"
fi
